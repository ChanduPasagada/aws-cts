=================================================
   Describe a stream 
=================================================
aws kinesis describe-stream --stream-name demo-stream --region us-east-1

=================================================
   Write data to a Kinesis Data Stream 
=================================================
aws kinesis put-record --stream-name demo-stream --partition-key 1 --data 1 --region us-east-1 --cli-binary-format raw-in-base64-out

aws kinesis put-record --stream-name demo-stream --partition-key 2 --data "hello" --region us-east-1 --cli-binary-format raw-in-base64-out

Note: make sure to put strings in double-quotes


== get the shard iterator to iterate over the stream records ===

aws kinesis get-shard-iterator --stream-name demo-stream --shard-iterator-type TRIM_HORIZON --shard-id shardId-000000000000 --region us-east-1

=====================================================
   Read the data from the shard using the iterator
=====================================================
aws kinesis get-records --shard-iterator xxxxxxxxxxxx --limit 2

aws kinesis get-records --limit 200 --shard-iterator "AAAAAAAAAAHTVTKX9VLmt0nRZ5HnDM+iDFAg68Yrk5opvVpr7BRCtjm7VpVKheQRlB+jit9P8KP1xA3sHU+ljTdu0qX1E7gmJErWUhZyG4ifuEsLTnyYKOH8BwerJ6Kp9DcWNfEdFmBSH5NLjoclW75b86olHurJoTNXrYiH6n2s/vJTUVyltOrMYY9G26HaA15uT19g/zqVwAymmDLYVfEXW9rgktsJHmUT1+QawjjUKPGi9BrY1A=="


=====================================================
   3 APIs of Kinesis Scaling
=====================================================
3 APIs of Kinesis Scaling: 
	=> SplitShard
	=> MergeShards
	=> UpdateShardCount

== describe a stream (to see the starting and ending hash keys) ===

aws kinesis describe-stream --stream-name demo-stream --region us-east-1	
		
=> This one shows us StartingHashKey and EndingHashKey. We can divide the EndingHashKey by 2 to create two equal Hash ranges.


====================================
 Split a shard into two new shards 
====================================
aws kinesis split-shard --stream-name demo-stream --shard-to-split shardId-000000000000 --new-starting-hash-key  170141183460469231731687303715884105727

NOTE: Here the --new-starting-hash-key is a new hask-key to split the shard. This can be half of the EndingHashKey of your shard (you can get this from describe command) to split into two equal shards.

====================================
	Merge the shards
====================================
aws kinesis merge-shards --stream-name demo-stream --shard-to-merge shardId-000000000001 --adjacent-shard-to-merge shardId-000000000002


====================================
 Kinesis Agent
====================================

Step 1: Launch an EC2 instance (with Linux AMI)
	    -> Attach a Role that has "AWSKinesisFullAccess" 
	    -> Connect to the EC2 via SSH.
		
Step 2: Install Kinesis Agent
		-> sudo yum install -y aws-kinesis-agent
		
Step 3: Create and run a shell script to continuously write some data to a log file
	    (Kinesis agent will read from this file and send the data to kinesis stream)
		
		-> sudo vi generatelogs.sh
		-> Add the following script to the file.
				while(true) do
					sleep 10;
					echo `date +"%H:%M:%S"` "log text" >> /tmp/server.log
				done;
		-> sudo chmod +x generatelogs.sh
		-> ./generatelogs.sh &       (note: & runs the script in background)

Step 4: Configure Kinesis Agent

		-> sudo vi /etc/aws-kinesis/agent.json

		-> in this file, change the "filePattern" to "/tmp/server.log" and "kinesisStream" to your stream name (ex: "LogStream")

	       "flows" : [
		   {
			"filePattern": "/tmp/server.log",
			"kinesisStream": "demo-stream"		
		   }
		   
Step 5: Restart the Kinesis Agent
		
		-> sudo service aws-kinesis-agent restart
		
Step 6: Check the logs (and observe that the contents of the file are sent to stream)	    

		-> cd /tmp
	    -> less server.log
	    -> cd /var/log/aws-kinesis-agent
	    -> ls
	    -> less aws-kinesis-agent.log
		
		

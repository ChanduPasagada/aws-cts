
  Lab 1 - DynamoDB CLI command to create a table and load data from a JSON file
  -----------------------------------------------------------------------------

	1. Make sure you have AWS CLI installed on your local machine

	2. Make sure you have a user profile created (with access keys) on your local machine
	   Here I am using a user profile called 'ctsdemouser'

	NOTE: Steps 1 & 2 are pre-requites to proceed further.

	3. Open a terminal and execute the following CLI command to create a DynamoDB table table 'mystore'

	aws dynamodb create-table \
	--profile ctsdemouser \
	--table-name mystore \
	--attribute-definitions AttributeName=clientid,AttributeType=S AttributeName=created,AttributeType=S \
	--key-schema AttributeName=clientid,KeyType=HASH AttributeName=created,KeyType=RANGE \
	--billing-mode PROVISIONED \
	--provisioned-throughput ReadCapacityUnits=1,WriteCapacityUnits=1


	The above command create a table 'mystore' with the follwoing details:
	Partition key: clientid (String)
	Sort key: created (String)


	4. Load items into the table from a JSON file using the followinf command:

	aws dynamodb batch-write-item \
	--profile ctsdemouser \
	--request-items file://mystore.json


	5. Scan the table using the following command:

	aws dynamodb scan \
	--profile ctsdemouser \
	--table-name mystore

	6. You can try other operations as well using the command shown below.
		
	
		
		
============================================
 CLI Commands for DynamoDB operations
============================================
NOte:
Make sure the mystore.json is located in your current directory/folder.


aws dynamodb create-table \
--profile ctsdemouser \
--table-name mystore \
--attribute-definitions AttributeName=clientid,AttributeType=S AttributeName=created,AttributeType=S \
--key-schema AttributeName=clientid,KeyType=HASH AttributeName=created,KeyType=RANGE \
--billing-mode PROVISIONED \
--provisioned-throughput ReadCapacityUnits=1,WriteCapacityUnits=1


aws dynamodb batch-write-item \
--profile ctsdemouser \
--request-items file://mystore.json


aws dynamodb scan \
--profile ctsdemouser \
--table-name mystore


aws dynamodb query  \
--table-name mystore \
--key-conditions '{ "clientid":{ "ComparisonOperator":"EQ", "AttributeValueList": [ {"S": "chris@example.com"} ] } }â€˜


aws dynamodb query \
--table-name mystore --key-condition-expression "clientid = :name" \
--expression-attribute-values '{":name":{"S":"chris@example.com"}}'





